<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - w41bu1</title>
        <link>http://localhost:1313/posts/</link>
        <description>All Posts | w41bu1</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>buivanyk4@gmail.com (w41bu1)</managingEditor>
            <webMaster>buivanyk4@gmail.com (w41bu1)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 06 Oct 2025 19:18:00 &#43;0700</lastBuildDate><atom:link href="http://localhost:1313/posts/" rel="self" type="application/rss+xml" /><item>
    <title>CVE-2025-10146 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-10-06-cve-2025-10146/</link>
    <pubDate>Mon, 06 Oct 2025 19:18:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-10-06-cve-2025-10146/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>A vulnerability exists in the Download Manager plugin prior to version 3.3.24. Data retrieved from GET requests is printed directly into HTML attributes, leading to reflected XSS when a user with privileges accesses a URL crafted by an attacker.
CVE ID: CVE-2025-10146 Product: WordPress Download Manager Plugin Vulnerability Type: Cross Site Scripting Affected Versions: &lt;= 3.3.23 CVSS severity: Medium (7.1) Required Privilege: Unauthenticated Requirements Local WordPress and Debugging Download Manager: v3.]]></description>
</item>
<item>
    <title>CVE-2025-58990 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-10-05-cve-2025-58990/</link>
    <pubDate>Sun, 05 Oct 2025 22:45:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-10-05-cve-2025-58990/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>A vulnerability in the ShopLentor plugin prior to version 3.2.0 allows an attacker with contributor privileges to inject malicious code into a block&rsquo;s CSS. This CSS is then loaded inline into the page and can lead to Stored XSS when previewed or rendered in a browser.
CVE ID: CVE-2025-58990 Product: WordPress ShopLentor Plugin Vulnerability Type: Cross Site Scripting Affected Versions: &lt;= 3.2.0 CVSS severity: Low (6.5) Required Privilege: Contributor Requirements Local WordPress and Debugging ShopLentor: v3.]]></description>
</item>
<item>
    <title>CVE-2025-27006 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-10-04-cve-2025-27006/</link>
    <pubDate>Sat, 04 Oct 2025 19:37:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-10-04-cve-2025-27006/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability exists in the Authorsy plugin for WordPress prior to version 1.0.6. This could allow an attacker to inject malicious code (e.g., redirect scripts, ads, or other HTML payloads) into the website, which would execute when visitors open the page.
CVE ID: CVE-2025-27006 Product: WordPress Authorsy Plugin Vulnerability Type: Cross Site Scripting Affected Versions: &lt;= 1.0.5 CVSS severity: Medium (6.5) OWASP Top 10: A1: Broken Access Control Required Privilege: Subscriber Although the description requires Subscriber privileges, it can actually be exploited Unauthenticated.]]></description>
</item>
<item>
    <title>CVE-2025-53307 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-10-03-cve-2025-53307/</link>
    <pubDate>Fri, 03 Oct 2025 19:19:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-10-03-cve-2025-53307/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability exists in the Assistant plugin for WordPress prior to version 3.6.2. This could allow an attacker to inject malicious code (e.g., redirect scripts, ads, or other HTML payloads) into the website, which would execute when visitors open the page.
CVE ID: CVE-2025-53307 Product: WordPress Assistant Plugin Vulnerability Type: Cross Site Scripting Affected Versions: &lt;= 1.5.2 CVSS severity: Medium (7.1) Required Privilege: Unauthenticated Requirements Local WordPress and Debugging Assistant: v1.]]></description>
</item>
<item>
    <title>CVE-2025-6234 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-10-02-cve-2025-6234/</link>
    <pubDate>Thu, 02 Oct 2025 20:00:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-10-02-cve-2025-6234/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability exists in the Hostel plugin for WordPress prior to version 1.1.5.8. An attacker could exploit it to target high-privilege users like admins.
CVE ID: CVE-2025-6234 Product: WordPress Hostel Plugin Vulnerability Type: Cross Site Scripting Affected Versions: &lt; 1.1.5.8 CVSS severity: Medium (7.1) Required Privilege: Unauthenticated Requirements Local WordPress and Debugging Hostel Plugin: v1.1.5.7 (vulnerable) and v1.1.5.8 (patched) Diff tool: meld or any tool that can compare two versions Analysis The root cause is the lack of sanitization and escaping for a parameter before rendering it on the page, leading to a Reflected Cross-Site Scripting (XSS) vulnerability.]]></description>
</item>
<item>
    <title>CVE-2022-21661 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-10-01-cve-2022-21661/</link>
    <pubDate>Wed, 01 Oct 2025 12:00:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-10-01-cve-2022-21661/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>Due to improper data sanitization in WP_Query, it is possible in certain cases to perform an SQL Injection through plugins or themes that use it in a particular way. This vulnerability was patched in WordPress version 5.8.3. Older affected versions were also fixed through security releases going back as far as 3.7.37.
CVE ID: CVE-2022-21661 Product: WordPress Vulnerability Type: SQL Injection Affected Versions: 3.7.37 â‰¤ version &lt; 5.8.3 CVSS severity: High (8.]]></description>
</item>
<item>
    <title>CVE-2025-2011 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-09-30-cve-2025-2011/</link>
    <pubDate>Tue, 30 Sep 2025 19:08:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-09-30-cve-2025-2011/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability occurs in the Depicter Slider WordPress plugin prior to version 3.6.2. This could allow an attacker to directly interact with your database, potentially leading to data theft or manipulation.
CVE ID: CVE-2025-2011 Product: WordPress Depicter Slider Plugin Vulnerability Type: SQL Injection Affected Versions: &lt;= 3.6.1 CVSS severity: High (9.3) Required Privilege: Unauthenticated Requirements Local WordPress and Debugging Depicter Slider: v3.6.1 (vulnerable) and v3.6.2 (patched) Diff tool: meld or any other comparison tool to visualize differences between versions Analysis The root cause is that the application directly injects data from a GET request into the SQL query without proper sanitization or escaping.]]></description>
</item>
<item>
    <title>CVE-2025-48118 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-09-29-cve-2025-48118/</link>
    <pubDate>Mon, 29 Sep 2025 19:54:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-09-29-cve-2025-48118/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability occurs in the Woocommerce Partial Shipment plugin for WordPress prior to version 3.3.
It allows attackers to directly interact with the database, potentially leading to data theft and other attacks.
CVE ID: CVE-2025-48118 Product: WordPress Woocommerce Partial Shipment Plugin Vulnerability Type: SQL Injection Affected Versions: &lt;= 3.2 CVSS Severity: High (8.5) Required Privilege: Subscriber Requirements Local WordPress and Debugging Woocommerce Partial Shipment: v3.2 (vulnerable) and v3.3 (patched) Diff Tool: meld or any comparison tool to view differences between versions Activated WooCommerce Plugin: must be activated before installing Woocommerce Partial Shipment Plugin, since several WooCommerce functions are used.]]></description>
</item>
<item>
    <title>CVE-2025-30936 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-09-28-cve-2025-30936/</link>
    <pubDate>Sun, 28 Sep 2025 20:51:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-09-28-cve-2025-30936/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability occurs in the Torod plugin for WordPress. This could allow attackers to directly interact with your database, including but not limited to stealing information.
CVE ID: CVE-2025-30936 Product: WordPress Torod Plugin Vulnerability Type: SQL Injection Affected Versions: &lt;= 1.9 Fixed in: &lt;= N/A CVSS severity: High (9.3) Required Privilege: Unauthenticated Requirements Local WordPress and Debugging Torod: v1.9 Analysis The core cause is that the application directly inserts data from a POST request into an SQL query without proper input validation or control mechanisms.]]></description>
</item>
<item>
    <title>CVE-2025-48281 Analysis &amp; POC</title>
    <link>http://localhost:1313/2025-09-27-cve-2025-48281/</link>
    <pubDate>Sat, 27 Sep 2025 19:00:00 &#43;0700</pubDate>
    <author>buivanyk4@gmail.com (w41bu1)</author>
    <guid>http://localhost:1313/2025-09-27-cve-2025-48281/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/app.png" referrerpolicy="no-referrer">
            </div>The vulnerability exists in the MyStyle Custom Product Designer WordPress plugin prior to version 3.21.2. This can allow an attacker to interact directly with your database, including but not limited to data exfiltration.
CVE ID: CVE-2025-48281 Product: WordPress MyStyle Custom Product Designer Plugin Vulnerability Type: SQL Injection Affected Versions: &lt;= 3.21.1 CVSS severity: High (9.3) Required Privilege: Unauthenticated Requirements Local WordPress and Debugging MyStyle Custom Product Designer: v3.21.1 (vulnerable) and v3.]]></description>
</item>
</channel>
</rss>
